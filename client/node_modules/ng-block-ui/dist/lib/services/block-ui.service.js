"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ReplaySubject_1 = require("rxjs/ReplaySubject");
var block_ui_actions_constant_1 = require("../constants/block-ui-actions.constant");
var block_ui_default_name_constant_1 = require("../constants/block-ui-default-name.constant");
var BlockUIService = (function () {
    function BlockUIService() {
        this.blockUISubject = new ReplaySubject_1.ReplaySubject();
        this.blockUIObservable = this.blockUISubject.asObservable();
    }
    BlockUIService.prototype.decorate = function (name) {
        if (name === void 0) { name = block_ui_default_name_constant_1.BlockUIDefaultName; }
        return {
            start: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.START, name),
            stop: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.STOP, name),
            reset: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.RESET, name),
        };
    };
    BlockUIService.prototype.observe = function () {
        return this.blockUIObservable;
    };
    BlockUIService.prototype.dispatch = function (subject, action, name) {
        if (name === void 0) { name = block_ui_default_name_constant_1.BlockUIDefaultName; }
        return function (message) {
            subject.next({
                name: name,
                action: action,
                message: message
            });
        };
    };
    return BlockUIService;
}());
BlockUIService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], BlockUIService);
exports.BlockUIService = BlockUIService;
