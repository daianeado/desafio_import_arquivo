(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/http"), require("@angular/core"), require("@angular/common"), require("rxjs/Observable"), require("rxjs/add/operator/map"), require("rxjs/add/operator/mergeMap"), require("rxjs/add/operator/publish"), require("rxjs/add/operator/toPromise"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/http", "@angular/core", "@angular/common", "rxjs/Observable", "rxjs/add/operator/map", "rxjs/add/operator/mergeMap", "rxjs/add/operator/publish", "rxjs/add/operator/toPromise"], factory);
	else if(typeof exports === 'object')
		exports["ngx-resource"] = factory(require("@angular/http"), require("@angular/core"), require("@angular/common"), require("rxjs/Observable"), require("rxjs/add/operator/map"), require("rxjs/add/operator/mergeMap"), require("rxjs/add/operator/publish"), require("rxjs/add/operator/toPromise"));
	else
		root["ngx-resource"] = factory(root["@angular/http"], root["@angular/core"], root["@angular/common"], root["rxjs/Observable"], root["rxjs/add/operator/map"], root["rxjs/add/operator/mergeMap"], root["rxjs/add/operator/publish"], root["rxjs/add/operator/toPromise"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__angular_http__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeMap__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeMap__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_publish__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_publish___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_publish__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__ = __webpack_require__(3);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Resource; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var Resource = /** @class */ (function () {
    function Resource(http) {
        this.http = http;
        this.$url = null;
        this.$path = null;
        this.$headers = null;
        this.$params = null;
        this.$data = null;
    }
    Resource_1 = Resource;
    Resource.$cleanData = function (obj) {
        if (Array.isArray(obj)) {
            return this.$cleanDataArray(obj);
        }
        else {
            return this.$cleanDataObject(obj);
        }
    };
    Resource.$cleanDataArray = function (obj) {
        for (var propName in obj) {
            if (typeof obj[propName] === 'function' || this.$cleanDataFields.indexOf(propName) > -1) {
                delete obj[propName];
            }
        }
        return obj;
    };
    Resource.$cleanDataObject = function (obj) {
        var cleanedObj = {};
        for (var propName in obj) {
            if (typeof obj[propName] !== 'function' && this.$cleanDataFields.indexOf(propName) === -1) {
                cleanedObj[propName] = obj[propName];
            }
        }
        return cleanedObj;
    };
    /**
     * Get main url of the resource
     * @returns {string|Promise<string>}
     */
    Resource.prototype.$getUrl = function (methodOptions) {
        return this.$url || this.$_getUrl(methodOptions) || __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].url || '';
    };
    /**
     * Set resource url
     * @param url
     */
    Resource.prototype.$setUrl = function (url) {
        this.$url = url;
    };
    /**
     * Get path of the resource
     * @returns {string|Promise<string>}
     */
    Resource.prototype.$getPath = function (methodOptions) {
        return this.$path || this.$_getPath(methodOptions) || __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].path || '';
    };
    /**
     * Set resource path
     * @param path
     */
    Resource.prototype.$setPath = function (path) {
        this.$path = path;
    };
    /**
     * Get headers
     * @returns {any|Promise<any>}
     */
    Resource.prototype.$getHeaders = function (methodOptions) {
        return this.$headers || this.$_getHeaders(methodOptions) || __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].headers || {};
    };
    /**
     * Set resource headers
     * @param headers
     */
    Resource.prototype.$setHeaders = function (headers) {
        this.$headers = headers;
    };
    /**
     * Get default params
     * @returns {any|Promise<any>|{}}
     */
    Resource.prototype.$getParams = function (methodOptions) {
        return this.$params || this.$_getParams(methodOptions) || __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].params || {};
    };
    /**
     * Set default resource params
     * @param params
     */
    Resource.prototype.$setParams = function (params) {
        this.$params = params;
    };
    /**
     * Get default data
     * @returns {any|Promise<any>|{}}
     */
    Resource.prototype.$getData = function (methodOptions) {
        return this.$data || this.$_getData(methodOptions) || __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].data || {};
    };
    /**
     * Set default resource params
     * @param data
     */
    Resource.prototype.$setData = function (data) {
        this.$data = data;
    };
    /**
     * Create the model
     *
     * @returns {any}
     */
    Resource.prototype.$createModel = function () {
        var ret = this.$initResultObject();
        ret.$resource = this;
        return ret;
    };
    /**
     * Body serializer
     *
     * @param body
     * @returns {string}
     */
    Resource.prototype.$bodySerializer = function (body) {
        return JSON.stringify(body);
    };
    /**
     * That is called before executing request
     * @param req
     */
    Resource.prototype.$requestInterceptor = function (req, methodOptions) {
        return req;
    };
    /**
     * Request observable interceptor
     * @param observable
     * @returns {Observable<any>}
     */
    Resource.prototype.$responseInterceptor = function (observable, req, methodOptions) {
        return observable.map(function (res) { return res._body ? res.json() : null; });
    };
    // removeTrailingSlash(): boolean {
    //   return true;
    // }
    Resource.prototype.$initResultObject = function (methodOptions) {
        if (methodOptions === void 0) { methodOptions = null; }
        return {};
    };
    Resource.prototype.$map = function (item) {
        return item;
    };
    Resource.prototype.$filter = function (item) {
        return true;
    };
    Resource.prototype.$getResourceOptions = function () {
        return null;
    };
    Resource.prototype.$request = function (req, methodOptions) {
        if (methodOptions === void 0) { methodOptions = {}; }
        var requestObservable = this.http.request(req);
        // noinspection TypeScriptValidateTypes
        return methodOptions.responseInterceptor ?
            methodOptions.responseInterceptor(requestObservable, req, methodOptions) :
            this.$responseInterceptor(requestObservable, req, methodOptions);
    };
    Resource.prototype.$resourceAction = function (data, params, callback, onError, methodOptions) {
        this.$_setGlobalsToOptions(methodOptions);
        if (methodOptions.toObservable && methodOptions.isLazy === undefined) {
            methodOptions.isLazy = true;
        }
        var shell = {
            returnInternal: this.$_createReturnData(data, methodOptions),
            data: data,
            params: params,
            options: methodOptions,
            callback: callback,
            onError: onError
        };
        shell.returnExternal = methodOptions.lean ? this.$_createReturnData(data, methodOptions) : shell.returnInternal;
        this.$_cleanData(shell);
        this.$_fillInternal(shell);
        this.$_mainRequest(shell);
        var $observable = methodOptions.lean ? shell.returnInternal.$observable : shell.returnExternal.$observable;
        if (methodOptions.toObservable) {
            return $observable;
        }
        if (methodOptions.toPromise) {
            return $observable.toPromise();
        }
        return shell.returnExternal;
    };
    Resource.prototype.$_createReturnData = function (data, methodOptions) {
        if (methodOptions.isLazy) {
            return {};
        }
        if (methodOptions.isArray) {
            return [];
        }
        if (methodOptions.lean || !data || data.$resource !== this) {
            return this.$_initResultObject(methodOptions);
        }
        return data;
    };
    Resource.prototype.$_initResultObject = function (methodOptions) {
        return methodOptions.initResultObject ? methodOptions.initResultObject() : this.$initResultObject(methodOptions);
    };
    Resource.prototype.$_map = function (methodOptions) {
        return methodOptions.map ? methodOptions.map : this.$map;
    };
    Resource.prototype.$_filter = function (methodOptions) {
        return methodOptions.filter ? methodOptions.filter : this.$filter;
    };
    Resource.prototype.$_cleanData = function (shell) {
        if (shell.data && !shell.options.skipDataCleaning) {
            shell.data = shell.data.toJSON ? shell.data.toJSON() : Resource_1.$cleanData(shell.data);
        }
    };
    Resource.prototype.$_fillInternal = function (shell) {
        var returnInternal = shell.returnInternal;
        var $observable = __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"].create(function (subscriber) {
            shell.mainDeferredSubscriber = subscriber;
        }).flatMap(function () { return shell.mainObservable; });
        var $abortRequest = function () {
            returnInternal.$resolved = true;
        };
        if (!shell.options.isLazy) {
            $observable = $observable.publish();
            $observable.connect();
        }
        Object.defineProperty(returnInternal, '$resolved', {
            enumerable: false,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(returnInternal, '$observable', {
            enumerable: false,
            configurable: true,
            writable: true,
            value: $observable
        });
        Object.defineProperty(returnInternal, '$abortRequest', {
            enumerable: false,
            configurable: true,
            writable: true,
            value: $abortRequest
        });
        Object.defineProperty(returnInternal, '$resource', {
            enumerable: false,
            configurable: true,
            writable: true,
            value: this
        });
    };
    Resource.prototype.$_mainRequest = function (shell) {
        var _this = this;
        this.$_resolveMainOptions(shell)
            .then(function (extraOptions) {
            shell.extraOptions = extraOptions;
            if (shell.returnInternal.$resolved) {
                shell.mainObservable = __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"].create(function (subscriber) {
                    subscriber.next(null);
                });
                _this.$_releaseMainDeferredSubscriber(shell);
                return;
            }
            shell.url = extraOptions.url + extraOptions.path;
            _this.$_prepareDataParams(shell);
            _this.$_prepareBody(shell);
            _this.$_prepareSearch(shell);
            _this.$_createRequestOptions(shell);
            var mainRequest = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["Request"](shell.requestOptions);
            mainRequest = shell.options.requestInterceptor ?
                shell.options.requestInterceptor(mainRequest, shell.options) :
                _this.$requestInterceptor(mainRequest, shell.options);
            if (!mainRequest) {
                shell.mainObservable = __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"].create(function (observer) {
                    observer.error(new Error('Request is null'));
                });
                console.warn('Request is null');
                _this.$_releaseMainDeferredSubscriber(shell);
                return;
            }
            // Doing the request
            var requestObservable = _this.$request(mainRequest, shell.options);
            shell.mainObservable = shell.options.isLazy ? requestObservable : _this.$_createMainObservable(shell, requestObservable);
            _this.$_releaseMainDeferredSubscriber(shell);
        });
    };
    Resource.prototype.$_resolveMainOptions = function (shell) {
        return Promise
            .all([
            Promise.resolve(shell.options.url || this.$getUrl(shell.options)),
            Promise.resolve(shell.options.path || this.$getPath(shell.options)),
            Promise.resolve(shell.options.headers || this.$getHeaders(shell.options)),
            Promise.resolve(shell.options.params || this.$getParams(shell.options)),
            Promise.resolve(shell.options.data || this.$getData(shell.options))
        ])
            .then(function (data) {
            if (shell.options.pathPrefix) {
                data[1] = shell.options.pathPrefix + data[1];
            }
            return {
                url: data[0],
                path: data[1],
                headers: new __WEBPACK_IMPORTED_MODULE_1__angular_http__["Headers"](data[2] ? Object.assign({}, data[2]) : data[2]),
                params: data[3] ? Object.assign({}, data[3]) : data[3],
                data: data[4]
            };
        });
    };
    Resource.prototype.$_releaseMainDeferredSubscriber = function (shell) {
        if (shell.mainDeferredSubscriber) {
            shell.mainDeferredSubscriber.next();
            shell.mainDeferredSubscriber.complete();
            shell.mainDeferredSubscriber = null;
        }
    };
    Resource.prototype.$_prepareDataParams = function (shell) {
        var usedPathParams = {};
        shell.usedPathParams = usedPathParams;
        if (!Array.isArray(shell.data) || shell.params) {
            if (!Array.isArray(shell.data)) {
                shell.data = Object.assign({}, shell.extraOptions.data, shell.data);
            }
            var pathParams = shell.url.match(/{([^}]*)}/g) || [];
            var _loop_1 = function (i) {
                var pathParam = pathParams[i];
                var pathKey = pathParam.substr(1, pathParam.length - 2);
                var isMandatory = pathKey[0] === '!';
                if (isMandatory) {
                    pathKey = pathKey.substr(1);
                }
                var isGetOnly = pathKey[0] === ':';
                if (isGetOnly) {
                    pathKey = pathKey.substr(1);
                }
                var value = this_1.$_getValueForPath(pathKey, shell.extraOptions.params, shell.params || shell.data, usedPathParams);
                if (isGetOnly && !shell.params) {
                    delete shell.data[pathKey];
                }
                if (this_1.$_isNullOrUndefined(value)) {
                    if (isMandatory) {
                        var consoleMsg_1 = "Mandatory " + pathParam + " path parameter is missing";
                        shell.mainObservable = __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"].create(function (observer) {
                            observer.error(new Error(consoleMsg_1));
                        });
                        console.warn(consoleMsg_1);
                        this_1.$_releaseMainDeferredSubscriber(shell);
                        throw new Error(consoleMsg_1);
                    }
                    shell.url = shell.url.substr(0, shell.url.indexOf(pathParam));
                    return "break";
                }
                // Replacing in the url
                shell.url = shell.url.replace(pathParam, value);
            };
            var this_1 = this;
            for (var i = 0; i < pathParams.length; i++) {
                var state_1 = _loop_1(i);
                if (state_1 === "break")
                    break;
            }
        }
        // Removing double slashed from final url
        shell.url = shell.url.replace(/\/\/+/g, '/');
        if (shell.url.startsWith('http')) {
            shell.url = shell.url.replace(':/', '://');
        }
        // Remove trailing slash
        if (typeof shell.options.removeTrailingSlash === 'undefined') {
            shell.options.removeTrailingSlash = true;
        }
        if (shell.options.removeTrailingSlash) {
            while (shell.url[shell.url.length - 1] === '/') {
                shell.url = shell.url.substr(0, shell.url.length - 1);
            }
        }
        // Remove mapped params
        for (var key in shell.extraOptions.params) {
            if (shell.extraOptions.params[key][0] === '@') {
                delete shell.extraOptions.params[key];
            }
        }
    };
    Resource.prototype.$_prepareBody = function (shell) {
        if (shell.options.method === __WEBPACK_IMPORTED_MODULE_1__angular_http__["RequestMethod"].Get) {
            // GET
            shell.searchParams = Object.assign({}, shell.extraOptions.params, shell.data);
        }
        else {
            // NON GET
            if (shell.data) {
                var _body = {};
                if (shell.options.rootNode) {
                    _body["" + shell.options.rootNode] = shell.data;
                }
                else {
                    _body = shell.data;
                }
                // shell.body = JSON.stringify(_body);
                shell.body = shell.options.bodySerializer ? shell.options.bodySerializer(_body) : this.$bodySerializer(_body);
            }
            shell.searchParams = shell.params;
        }
        if (!shell.body) {
            shell.extraOptions.headers.delete('content-type');
        }
    };
    Resource.prototype.$_prepareSearch = function (shell) {
        shell.search = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["URLSearchParams"]();
        if (!shell.params) {
            for (var key in shell.searchParams) {
                if (shell.searchParams.hasOwnProperty(key) && !shell.usedPathParams[key]) {
                    var value = shell.searchParams[key];
                    this.$_appendSearchParams(shell.search, key, value);
                }
            }
        }
        var tsName = shell.options.addTimestamp;
        if (tsName) {
            if (tsName === true) {
                tsName = 'ts';
            }
            shell.search.append(tsName, '' + Date.now());
        }
    };
    Resource.prototype.$_createRequestOptions = function (shell) {
        shell.requestOptions = {
            method: shell.options.method,
            headers: shell.extraOptions.headers,
            body: shell.body,
            url: shell.url,
            withCredentials: shell.options.withCredentials
        };
        if (shell.options.angularV2) {
            shell.requestOptions.search = shell.search;
        }
        else {
            shell.requestOptions.params = shell.search;
        }
    };
    Resource.prototype.$_createMainObservable = function (shell, requestObservable) {
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"].create(function (subscriber) {
            var reqSubscr = requestObservable.subscribe(function (resp) {
                var filter = _this.$_filter(shell.options);
                var map = _this.$_map(shell.options);
                if (resp !== null) {
                    if (shell.options.isArray) {
                        // Expecting array
                        if (!Array.isArray(resp)) {
                            console.error('Returned data should be an array. Received', resp);
                        }
                        else {
                            (_a = shell.returnExternal).push.apply(_a, resp
                                .filter(filter)
                                .map(map)
                                .map(function (respItem) {
                                if (!respItem) {
                                    return respItem;
                                }
                                if (typeof respItem === 'object') {
                                    if (!shell.options.lean) {
                                        respItem.$resource = _this;
                                    }
                                    return _this.$_setDataToObject(_this.$_initResultObject(shell.options), respItem);
                                }
                                return respItem;
                            }));
                        }
                    }
                    else {
                        // Expecting object
                        if (Array.isArray(resp)) {
                            console.error('Returned data should be an object. Received', resp);
                        }
                        else {
                            if (filter(resp)) {
                                shell.returnExternal = _this.$_setDataToObject(shell.returnExternal, map(resp));
                            }
                        }
                    }
                }
                shell.returnInternal.$resolved = true;
                subscriber.next(shell.returnExternal);
                var _a;
            }, function (err) {
                subscriber.error(err);
                if (shell.onError) {
                    shell.onError(err);
                }
            }, function () {
                // shell.returnInternal.$resolved = true;
                subscriber.complete();
                if (shell.callback) {
                    shell.callback(shell.returnExternal);
                }
            });
            shell.returnInternal.$abortRequest = function () {
                if (shell.returnInternal.$resolved) {
                    return;
                }
                reqSubscr.unsubscribe();
                shell.returnInternal.$resolved = true;
            };
        });
    };
    Resource.prototype.$_setDataToObject = function (ret, resp) {
        if (ret.$setData) {
            ret.$setData(resp);
        }
        else {
            if (Array.isArray(resp)) {
                ret = resp;
            }
            else {
                Object.assign(ret, resp);
            }
        }
        return ret;
    };
    Resource.prototype.$_getValueForPath = function (key, params, data, usedPathParams) {
        if (!this.$_isNullOrUndefined(data[key]) && typeof data[key] !== 'object') {
            usedPathParams[key] = true;
            return data[key];
        }
        if (this.$_isNullOrUndefined(params[key])) {
            return null;
        }
        if (params[key][0] === '@') {
            return this.$_getValueForPath(params[key].substr(1), params, data, usedPathParams);
        }
        usedPathParams[key] = true;
        return params[key];
    };
    Resource.prototype.$_isNullOrUndefined = function (value) {
        return value === null || value === undefined;
    };
    Resource.prototype.$_appendSearchParams = function (search, key, value) {
        /// Convert dates to ISO format string
        if (value instanceof Date) {
            search.append(key, value.toISOString());
            return;
        }
        if (typeof value === 'object') {
            switch (__WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].getParamsMappingType) {
                case __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["a" /* TGetParamsMappingType */].Plain:
                    if (Array.isArray(value)) {
                        for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
                            var arr_value = value_1[_i];
                            search.append(key, arr_value);
                        }
                    }
                    else {
                        if (value && typeof value === 'object') {
                            /// Convert dates to ISO format string
                            if (value instanceof Date) {
                                value = value.toISOString();
                            }
                            else {
                                value = JSON.stringify(value);
                            }
                        }
                        search.append(key, value);
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["a" /* TGetParamsMappingType */].Bracket:
                    /// Convert object and arrays to query params
                    for (var k in value) {
                        if (value.hasOwnProperty(k)) {
                            this.$_appendSearchParams(search, key + '[' + k + ']', value[k]);
                        }
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["a" /* TGetParamsMappingType */].JQueryParamsBracket:
                    /// Convert object and arrays to query params according to $.params
                    for (var k in value) {
                        if (value.hasOwnProperty(k)) {
                            var path = key + "[" + k + "]";
                            if (Array.isArray(value) && typeof value[k] !== 'object') {
                                path = key + "[]";
                            }
                            this.$_appendSearchParams(search, path, value[k]);
                        }
                    }
                    break;
            }
            return;
        }
        search.append(key, value);
    };
    /**
     * Get url to be replaced by ResourceParamsBase
     *
     * @param methodOptions
     * @returns { any | Promise<any>}
     * @private
     */
    Resource.prototype.$_getUrl = function (methodOptions) {
        return null;
    };
    /**
     * Get get path to be replaced by ResourceParamsBase
     *
     * @param methodOptions
     * @returns { any | Promise<any>}
     * @private
     */
    Resource.prototype.$_getPath = function (methodOptions) {
        return null;
    };
    /**
     * Get headers to be replaced by ResourceParamsBase
     *
     * @param methodOptions
     * @returns { any | Promise<any>}
     * @private
     */
    Resource.prototype.$_getHeaders = function (methodOptions) {
        return null;
    };
    /**
     * Get params to be replaced by ResourceParamsBase
     *
     * @param methodOptions
     * @returns { any | Promise<any>}
     * @private
     */
    Resource.prototype.$_getParams = function (methodOptions) {
        return null;
    };
    /**
     * Get data to be replaced by ResourceParamsBase
     *
     * @param methodOptions
     * @returns { any | Promise<any>}
     * @private
     */
    Resource.prototype.$_getData = function (methodOptions) {
        return null;
    };
    Resource.prototype.$_setGlobalsToOptions = function (methodOptions) {
        if (methodOptions.toPromise === undefined && __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].toPromise !== null) {
            methodOptions.toPromise = __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].toPromise;
        }
        if (methodOptions.toObservable === undefined && __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].toObservable !== null) {
            methodOptions.toObservable = __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].toObservable;
        }
        if (methodOptions.lean === undefined && __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].lean !== null) {
            methodOptions.lean = __WEBPACK_IMPORTED_MODULE_7__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].lean;
        }
    };
    Resource.$cleanDataFields = [
        '$cleanDataFields',
        '$resolved',
        '$observable',
        '$abortRequest',
        '$resource'
    ];
    Resource = Resource_1 = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["Http"]])
    ], Resource);
    return Resource;
    var Resource_1;
}());



/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_http__);
/* harmony export (immutable) */ __webpack_exports__["a"] = ResourceAction;

function ResourceAction(methodOptions) {
    methodOptions = methodOptions || {};
    if (methodOptions.method === undefined) {
        methodOptions.method = __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Get;
    }
    return function (target, propertyKey) {
        target[propertyKey] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var data = null;
            var params = null;
            var callback = null;
            var onError = null;
            args.forEach(function (arg) {
                if (typeof arg === 'function') {
                    if (callback) {
                        onError = arg;
                    }
                    else {
                        callback = arg;
                    }
                }
                else {
                    if (data) {
                        params = arg;
                    }
                    else {
                        data = arg;
                    }
                }
            });
            var options = Object.assign({}, this.getResourceOptions(), methodOptions);
            return this.$resourceAction(data, params, callback, onError, options);
        };
    };
}


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TGetParamsMappingType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ResourceGlobalConfig; });
var TGetParamsMappingType;
(function (TGetParamsMappingType) {
    TGetParamsMappingType[TGetParamsMappingType["Plain"] = 0] = "Plain";
    TGetParamsMappingType[TGetParamsMappingType["Bracket"] = 1] = "Bracket";
    TGetParamsMappingType[TGetParamsMappingType["JQueryParamsBracket"] = 2] = "JQueryParamsBracket";
})(TGetParamsMappingType || (TGetParamsMappingType = {}));
var ResourceGlobalConfig = /** @class */ (function () {
    function ResourceGlobalConfig() {
    }
    ResourceGlobalConfig.url = null;
    ResourceGlobalConfig.path = null;
    ResourceGlobalConfig.headers = {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
    };
    ResourceGlobalConfig.params = null;
    ResourceGlobalConfig.data = null;
    ResourceGlobalConfig.add2Provides = null;
    ResourceGlobalConfig.lean = null;
    ResourceGlobalConfig.toPromise = null;
    ResourceGlobalConfig.toObservable = null;
    ResourceGlobalConfig.getParamsMappingType = TGetParamsMappingType.Plain;
    return ResourceGlobalConfig;
}());



/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_http__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceProviders; });

var ResourceProviders = /** @class */ (function () {
    function ResourceProviders() {
    }
    ResourceProviders.add = function (resource, subSet) {
        if (subSet === void 0) { subSet = null; }
        if (!subSet) {
            subSet = this.mainProvidersName;
        }
        if (!this.providers[subSet]) {
            this.providers[subSet] = [];
        }
        var deps = Reflect.getMetadata('design:paramtypes', resource);
        if (!deps || deps.length === 0) {
            deps = [__WEBPACK_IMPORTED_MODULE_0__angular_http__["Http"]];
        }
        this.providers[subSet].push({
            provide: resource,
            useFactory: function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return new (resource.bind.apply(resource, [void 0].concat(args)))();
            },
            deps: deps
        });
    };
    ResourceProviders.get = function (subSet) {
        if (subSet === void 0) { subSet = null; }
        if (!subSet) {
            subSet = this.mainProvidersName;
        }
        return this.providers[subSet] || [];
    };
    ResourceProviders.mainProvidersName = '__mainProviders';
    ResourceProviders.providers = {
        __mainProviders: []
    };
    return ResourceProviders;
}());



/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ResourceProviders__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ResourceGlobalConfig__ = __webpack_require__(3);
/* harmony export (immutable) */ __webpack_exports__["a"] = ResourceParams;


function ResourceParams(params) {
    if (params === void 0) { params = {}; }
    return function (target) {
        target.prototype.getResourceOptions = function () {
            return params;
        };
        if (params.add2Provides === undefined && __WEBPACK_IMPORTED_MODULE_1__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].add2Provides !== null) {
            params.add2Provides = __WEBPACK_IMPORTED_MODULE_1__ResourceGlobalConfig__["b" /* ResourceGlobalConfig */].add2Provides;
        }
        if (params.add2Provides !== false) {
            __WEBPACK_IMPORTED_MODULE_0__ResourceProviders__["a" /* ResourceProviders */].add(target, params.providersSubSet);
        }
        if (typeof params.removeTrailingSlash !== 'undefined') {
            target.prototype.removeTrailingSlash = function () {
                return !!params.removeTrailingSlash;
            };
        }
        if (params.url) {
            target.prototype.$_getUrl = function () {
                return params.url;
            };
        }
        if (params.path) {
            target.prototype.$_getPath = function () {
                return params.path;
            };
        }
        if (params.headers) {
            target.prototype.$_getHeaders = function () {
                return params.headers;
            };
        }
        if (params.params) {
            target.prototype.$_getParams = function () {
                return params.params;
            };
        }
        if (params.data) {
            target.prototype.$_getData = function () {
                return params.data;
            };
        }
    };
}


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__angular_common__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__angular_http__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_ResourceProviders__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_Resource__ = __webpack_require__(1);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_4__src_Resource__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_ResourceAction__ = __webpack_require__(2);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_5__src_ResourceAction__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_ResourceCRUD__ = __webpack_require__(9);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_6__src_ResourceCRUD__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_ResourceCRUDBase__ = __webpack_require__(10);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_7__src_ResourceCRUDBase__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_ResourceGlobalConfig__ = __webpack_require__(3);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_8__src_ResourceGlobalConfig__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_8__src_ResourceGlobalConfig__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_ResourceModel__ = __webpack_require__(11);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_9__src_ResourceModel__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_ResourceODATA__ = __webpack_require__(12);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_10__src_ResourceODATA__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "j", function() { return __WEBPACK_IMPORTED_MODULE_10__src_ResourceODATA__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_ResourceParams__ = __webpack_require__(6);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "k", function() { return __WEBPACK_IMPORTED_MODULE_11__src_ResourceParams__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "l", function() { return __WEBPACK_IMPORTED_MODULE_3__src_ResourceProviders__["a"]; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};













var ResourceModule = /** @class */ (function () {
    function ResourceModule() {
    }
    ResourceModule_1 = ResourceModule;
    ResourceModule.forRoot = function () {
        return {
            ngModule: ResourceModule_1,
            providers: __WEBPACK_IMPORTED_MODULE_3__src_ResourceProviders__["a" /* ResourceProviders */].providers[__WEBPACK_IMPORTED_MODULE_3__src_ResourceProviders__["a" /* ResourceProviders */].mainProvidersName]
        };
    };
    ResourceModule.forChild = function (subSet) {
        return {
            ngModule: ResourceModule_1,
            providers: __WEBPACK_IMPORTED_MODULE_3__src_ResourceProviders__["a" /* ResourceProviders */].providers[subSet] ? __WEBPACK_IMPORTED_MODULE_3__src_ResourceProviders__["a" /* ResourceProviders */].providers[subSet] : []
        };
    };
    ResourceModule = ResourceModule_1 = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_2__angular_http__["HttpModule"]]
        })
    ], ResourceModule);
    return ResourceModule;
    var ResourceModule_1;
}());



/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(7);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceModule", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Resource", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceAction", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceCRUD", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceCRUDBase", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TGetParamsMappingType", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceGlobalConfig", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceModel", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceODATA", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceODATAParams", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceParams", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ResourceProviders", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["l"]; });



/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_http__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Resource__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ResourceAction__ = __webpack_require__(2);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceCRUD; });
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ResourceCRUD = /** @class */ (function (_super) {
    __extends(ResourceCRUD, _super);
    function ResourceCRUD() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // Alias to save
    ResourceCRUD.prototype.create = function (data, callback) {
        return this.save(data, callback);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            isArray: true
        }),
        __metadata("design:type", Function)
    ], ResourceCRUD.prototype, "query", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            path: '/{!id}'
        }),
        __metadata("design:type", Function)
    ], ResourceCRUD.prototype, "get", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Post
        }),
        __metadata("design:type", Function)
    ], ResourceCRUD.prototype, "save", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Put,
            path: '/{!id}'
        }),
        __metadata("design:type", Function)
    ], ResourceCRUD.prototype, "update", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Delete,
            path: '/{!id}'
        }),
        __metadata("design:type", Function)
    ], ResourceCRUD.prototype, "remove", void 0);
    return ResourceCRUD;
}(__WEBPACK_IMPORTED_MODULE_1__Resource__["a" /* Resource */]));



/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_http__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Resource__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ResourceAction__ = __webpack_require__(2);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceCRUDBase; });
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ResourceCRUDBase = /** @class */ (function (_super) {
    __extends(ResourceCRUDBase, _super);
    function ResourceCRUDBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // Alias to save
    ResourceCRUDBase.prototype.create = function (data, callback) {
        return this.save(data, callback);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            isArray: true
        }),
        __metadata("design:type", Function)
    ], ResourceCRUDBase.prototype, "query", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])(),
        __metadata("design:type", Function)
    ], ResourceCRUDBase.prototype, "get", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Post
        }),
        __metadata("design:type", Function)
    ], ResourceCRUDBase.prototype, "save", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Put
        }),
        __metadata("design:type", Function)
    ], ResourceCRUDBase.prototype, "update", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestMethod"].Delete
        }),
        __metadata("design:type", Function)
    ], ResourceCRUDBase.prototype, "remove", void 0);
    return ResourceCRUDBase;
}(__WEBPACK_IMPORTED_MODULE_1__Resource__["a" /* Resource */]));



/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Resource__ = __webpack_require__(1);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceModel; });

var ResourceModel = /** @class */ (function () {
    function ResourceModel() {
    }
    ResourceModel.prototype.$setData = function (data) {
        Object.assign(this, data);
        return this;
    };
    ResourceModel.prototype.$save = function () {
        if (this.isNew()) {
            return this.$create();
        }
        else {
            return this.$update();
        }
    };
    ResourceModel.prototype.$create = function () {
        return this.$resource_method('create');
    };
    ResourceModel.prototype.$update = function () {
        return this.$resource_method('update');
    };
    ResourceModel.prototype.$remove = function () {
        return this.$resource_method('remove');
    };
    ResourceModel.prototype.toJSON = function () {
        return __WEBPACK_IMPORTED_MODULE_0__Resource__["a" /* Resource */].$cleanData(this);
    };
    ResourceModel.prototype.isNew = function () {
        return !this['id'];
    };
    ResourceModel.prototype.$resource_method = function (methodName) {
        if (!this.$resource) {
            console.error("Your Resource is not set. Please use resource.createModel() method to create model.");
            return this;
        }
        if (!this.$resource[methodName]) {
            console.error("Your Resource has no implemented " + methodName + " method.");
            return this;
        }
        this.$resource[methodName](this);
        return this;
    };
    return ResourceModel;
}());



/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__angular_http__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Resource__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ResourceAction__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ResourceParams__ = __webpack_require__(6);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceODATA; });
/* harmony export (immutable) */ __webpack_exports__["b"] = ResourceODATAParams;
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/** A Resource base class for ODATA entities. To create a resource is just
 * enough to extend this class and all the base ODATA functionalities will be present.
 */
var ResourceODATA = /** @class */ (function (_super) {
    __extends(ResourceODATA, _super);
    function ResourceODATA() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResourceODATA.prototype.$getUrl = function () {
        return _super.prototype.$getUrl.call(this) + "/" + this.getEntitySetName();
    };
    ResourceODATA.prototype.getEntityName = function () {
        return null;
    };
    ResourceODATA.prototype.getEntitySetName = function () {
        return this.getEntityName() + "s";
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__ResourceAction__["a" /* ResourceAction */])({
            path: '/{!id}'
        }),
        __metadata("design:type", Function)
    ], ResourceODATA.prototype, "get", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__ResourceAction__["a" /* ResourceAction */])({
            method: __WEBPACK_IMPORTED_MODULE_1__angular_http__["RequestMethod"].Post
        }),
        __metadata("design:type", Function)
    ], ResourceODATA.prototype, "save", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__ResourceAction__["a" /* ResourceAction */])({
            params: {
                "$filter": "@$filter",
                "$search": "@$search",
                "$expand": "@$expand",
                "$limit": "@$limit",
                "query": "@query"
            },
            isArray: true
        }),
        __metadata("design:type", Function)
    ], ResourceODATA.prototype, "search", void 0);
    return ResourceODATA;
}(__WEBPACK_IMPORTED_MODULE_2__Resource__["a" /* Resource */]));

/**
 * A ODATA annotation for a resource for a ODATA entity resource extending {@link ResourceODATA}.
 */
function ResourceODATAParams(params) {
    var injectable = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])();
    var zuper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__ResourceParams__["a" /* ResourceParams */])(params);
    return function (target) {
        injectable(target);
        zuper(target);
        target.prototype.getEntityName = function () {
            if (params.name) {
                return params.name;
            }
            return typeof params.entity === "string" ? params.entity : params.entity.name;
        };
    };
}


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_14__;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_15__;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_16__;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_17__;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_18__;

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,